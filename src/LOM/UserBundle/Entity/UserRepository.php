<?php

namespace LOM\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Security\Core\User\UserInterface;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository {

    /**
     * Find a user by username. Necessary for the login system.
     *
     * @param string $username
     *
     * @return User
     *
     * @throws UsernameNotFoundException
     */
    public function loadUserByUsername($username) {
        $q = $this->createQueryBuilder('u')
                ->where('u.username = :username')
                ->setParameter('username', $username)
                ->getQuery();
        $user = null;
        try {
            $user = $q->getSingleResult();
        } catch (Exception $ex) {
            $message = sprintf(
                    'Unable to find an active user identified by "%s".', $username
            );
            throw new UsernameNotFoundException($message, 0, $ex);
        }
        return $user;
    }

    /**
     * Refresh/reload a user from the database
     *
     * @param \Symfony\Component\Security\Core\User\UserInterface $user
     *
     * @return User
     *
     * @throws UnsupportedUserException
     */
    public function refreshUser(UserInterface $user) {
        $class = get_class($user);
        if (!$this->supportsClass($class)) {
            throw new UnsupportedUserException(sprintf('Instances of "%s" are not supported.', $class));
        }
        return $this->find($user->getId());
    }

    /**
     * Check if this repository supports storing/fetching another class.
     *
     * @param string $class
     *
     * @return boolean
     */
    public function supportsClass($class) {
        return $this->getEntityName() === $class || is_subclass_of($class, $this->getEntityName());
    }

}
